generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  provider           String
  providerAccountId  String    @map("provider_account_id")
  type               String?
  scope              String?
  token_type         String?
  id_token           String?
  refreshToken       String?
  access_token       String?
  expires_at         Int?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  user               User      @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String     @id @default(cuid())
  userId       String
  expires      DateTime
  sessionToken String     @unique
  accessToken  String     @unique
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
  user         User       @relation(fields: [userId], references: [id])
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  password      String?
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]

  Tasks         Tasks[]
}

model VerificationRequest {
  id            String    @id @default(cuid())
  index         String
  draggableId   String    @unique
  expires       DateTime
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}



model Tasks {
  id_task       String     @id @default(cuid())
  index         String     @unique
  draggableId   String     @unique
  author        User       @relation(fields: [authorId], references: [id])
  authorId      String     
  qntCheck      Int
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}
